##Laying of the framework 

set UNIT_TYPES; ##h
set UNITS; ##i
set UTILITIES within UNITS; ##i1
set PROCESSES within UNITS; ##i2
set LAYER_TYPES; ##j
set LAYERS; ##k
set LAYER_IN_UNIT_TYPES within UNIT_TYPES; ##l
set LAYER_IN_UNITS within UNITS; ##m
set LAYER_OUT_UNIT_TYPES within UNIT_TYPES; ##n
set LAYER_OUT_UNITS within UNITS; ##o

set LAYER_INFO{LAYER_TYPES} within LAYERS; ##o1
set LAYER_INFO{LAYER_TYPES}{UNIT_TYPES} within LAYERS; ##o2
set LAYER_INFO{LAYER_TYPES}{UNITS} within UNITS; ##o3 

set OBJFUNC_DEF; ##z


param fmin{h in UNIT_TYPES, i in UNITS};
param fmax{h in UNIT_TYPES, i in UNITS};
param obj_function_const{l in OBJFUNC_DEF, h in UNIT_TYPES, i in UNITS};
param obj_function_grad{l in OBJFUNC_DEF, h in UNIT_TYPES, i in UNITS};
param layers_in_const{j in LAYER_TYPES, k in LAYERS, l in LAYER_IN_UNIT_TYPES, m in LAYER_IN_UNITS};
param layers_in_grad{j in LAYER_TYPES, k in LAYERS, l in LAYER_IN_UNIT_TYPES, m in LAYER_IN_UNITS};
param layers_out_const{j in LAYER_TYPES, k in LAYERS, n in LAYER_OUT_UNIT_TYPES, o in LAYER_OUT_UNITS};
param layers_out_grad{j in LAYER_TYPES, k in LAYERS, n in LAYER_OUT_UNIT_TYPES, o in LAYER_OUT_UNITS};

##Defining variables 

var u_rate{h in UNIT_TYPES, i in UNITS}, >= 0, <= 1000;		
var y_onoff{h in UNIT_TYPES, i in UNITS}, integer, >= 0, <= 1;

##Defining constraints 

s.t. u_lb_util{i1 in UTILITIES}: y_onoff['utility',i1]*fmin['utility',i1] - u_rate['utility',i1] <= 0;
s.t. u_ub_util{i1 in UTILITIES}: u_rate['utility',i1] - y_onoff['utility',i1]*fmax['utility',i1] <= 0;
s.t. u_lb_proc{i2 in PROCESSES}: y_onoff['process',i2]*fmin['process',i2] - u_rate['process',i2] <= 0;
s.t. u_ub_proc{i2 in PROCESSES}: u_rate['process',i2] - y_onoff['process',i2]*fmax['process',i2] <= 0;

s.t. layer_balance{k in LAYERS}: (sum{j in LAYER_TYPES, l in LAYER_IN_UNIT_TYPES, m in LAYER_IN_UNITS} (
				 y_onoff[l,m]*layers_in_const[j,k,l,m] + u_rate[l,m]*layers_in_grad[j,k,l,m])) 
				 - (sum{j in LAYER_TYPES, n in LAYER_OUT_UNIT_TYPES, o in LAYER_OUT_UNITS} (
				 y_onoff[n,o]*layers_out_const[j,k,n,o] + u_rate[n,o]*layers_out_grad[j,k,n,o])) = 0;


##Defining objective function 

minimize obj{z in OBJFUNC_DEF}: sum{h in UNIT_TYPES, i in UNITS} (y_onoff[h,i]*obj_function_const[z,h,i] + 
				u_rate[h,i]*obj_function_grad[z,h,i]);


data;

set UNIT_TYPES := utility process;
set UNITS := ch1_1 ch1_2 ch1_3 ch1_4 ch2_1 ch2_2 ch2_3 ch2_4 ch3_1 ch3_2 ch3_3 ch3_4 sp1 sscp ssgv2 sshsb sspfa
	     ssser ssfir sp2 ch1_ret ch2_ret ch3_ret;
set UTILITIES := ch1_1 ch1_2 ch1_3 ch1_4 ch2_1 ch2_2 ch2_3 ch2_4 ch3_1 ch3_2 ch3_3 ch3_4 sp1 sscp ssgv2 sshsb sspfa
	         ssser ssfir sp2;
set PROCESSES := ch1_ret ch2_ret ch3_ret;
set LAYER_TYPES := balancing_only;
set LAYERS := chil2sp1 sp12cp sp12gv2 sp12hsb sp12pfa sp12ser sp12fir ss2sp2 sp22ch1 sp22ch2 sp22ch3;
set LAYER_IN_UNIT_TYPES := utility;
set LAYER_IN_UNITS := ch1_1 ch1_2 ch1_3 ch1_4 ch2_1 ch2_2 ch2_3 ch2_4 ch3_1 ch3_2 ch3_3 ch3_4 sp1 sscp ssgv2 sshsb 
		      sspfa ssser ssfir sp2;
set LAYER_OUT_UNIT_TYPES := utility process;
set LAYER_OUT_UNITS := sp1 sscp ssgv2 sshsb sspfa ssser ssfir sp2 ch1_ret ch2_ret ch3_ret;
set OBJFUNC_DEF := power;


param fmin := 
	utility ch1_1 0 
	utility ch1_2 0.25 
	utility ch1_3 0.5 
	utility ch1_4 0.75 
	utility ch2_1 0 
	utility ch2_2 0.25 
	utility ch2_3 0.5 
	utility ch2_4 0.75 
	utility ch3_1 0 
	utility ch3_2 0.25 
	utility ch3_3 0.5 
	utility ch3_4 0.75 
	utility sp1 0 
	utility sscp 0 
	utility ssgv2 0 
	utility sshsb 0 
	utility sspfa 0 
	utility ssser 0 
	utility ssfir 0 
	utility sp2 0 
	process ch1_ret 1 
	process ch2_ret 1 
	process ch3_ret 1;

param fmax := 
	utility ch1_1 0.25 
	utility ch1_2 0.5 
	utility ch1_3 0.75 
	utility ch1_4 1 
	utility ch2_1 0.25 
	utility ch2_2 0.5 
	utility ch2_3 0.75 
	utility ch2_4 1 
	utility ch3_1 0.25 
	utility ch3_2 0.5 
	utility ch3_3 0.75 
	utility ch3_4 1 
	utility sp1 1 
	utility sscp 1 
	utility ssgv2 1 
	utility sshsb 1 
	utility sspfa 1 
	utility ssser 1 
	utility ssfir 1 
	utility sp2 1 
	process ch1_ret 1 
	process ch2_ret 1 
	process ch3_ret 1;

param obj_function_const := 
		power utility ch1_1 0.000000
		power utility ch1_2 23.933993
		power utility ch1_3 -68.947931
		power utility ch1_4 -225.794971
		power utility ch2_1 0.000000
		power utility ch2_2 279.491578
		power utility ch2_3 34.470608
		power utility ch2_4 -367.074916
		power utility ch3_1 0.000000
		power utility ch3_2 279.491578
		power utility ch3_3 34.470608
		power utility ch3_4 -367.074916
		power utility sp1 0.000000
		power utility sscp 0.000000
		power utility ssgv2 0.000000
		power utility sshsb 0.000000
		power utility sspfa 0.000000
		power utility ssser 0.000000
		power utility ssfir 0.000000
		power utility sp2 0.000000
		power process ch1_ret 0.000000
		power process ch2_ret 0.000000
		power process ch3_ret 0.000000; 

param obj_function_grad :=
		power utility ch1_1 403.944904
		power utility ch1_2 308.208933
		power utility ch1_3 493.972780
		power utility ch1_4 703.102167
		power utility ch2_1 2027.470328
		power utility ch2_2 909.504015
		power utility ch2_3 1399.545956
		power utility ch2_4 1934.939988
		power utility ch3_1 2027.470328
		power utility ch3_2 909.504015
		power utility ch3_3 1399.545956
		power utility ch3_4 1934.939988
		power utility sp1 0.000000
		power utility sscp 0.000000
		power utility ssgv2 0.000000
		power utility sshsb 0.000000
		power utility sspfa 0.000000
		power utility ssser 0.000000
		power utility ssfir 0.000000
		power utility sp2 0.000000
		power process ch1_ret 0.000000
		power process ch2_ret 0.000000
		power process ch3_ret 0.000000; 

param layers_in_const :=
		balancing_only chil2sp1 utility ch1_1 27.872861
		balancing_only chil2sp1 utility ch1_2 27.872861
		balancing_only chil2sp1 utility ch1_3 27.872861
		balancing_only chil2sp1 utility ch1_4 27.872861
		balancing_only chil2sp1 utility ch2_1 128.563570
		balancing_only chil2sp1 utility ch2_2 128.563570
		balancing_only chil2sp1 utility ch2_3 128.563570
		balancing_only chil2sp1 utility ch2_4 128.563570
		balancing_only chil2sp1 utility ch3_1 128.563570
		balancing_only chil2sp1 utility ch3_2 128.563570
		balancing_only chil2sp1 utility ch3_3 128.563570
		balancing_only chil2sp1 utility ch3_4 128.563570
		balancing_only sp12cp utility sp1 0
		balancing_only sp12gv2 utility sp1 0
		balancing_only sp12hsb utility sp1 0
		balancing_only sp12pfa utility sp1 0
		balancing_only sp12ser utility sp1 0
		balancing_only sp12fir utility sp1 0
		balancing_only ss2sp2 utility sscp 0
		balancing_only ss2sp2 utility ssgv2 0.632784448
		balancing_only ss2sp2 utility sshsb 0.632784448
		balancing_only ss2sp2 utility sspfa 0.632784448
		balancing_only ss2sp2 utility ssser 0.632784448
		balancing_only ss2sp2 utility ssfir 0
		balancing_only ss22ch1 utility sp2 0
		balancing_only ss22ch2 utility sp2 0
		balancing_only ss22ch3 utility sp2 0;

param layers_in_grad := 
		balancing_only chil2sp1 utility ch1_1 -0.819310391
		balancing_only chil2sp1 utility ch1_2 -0.819310391
		balancing_only chil2sp1 utility ch1_3 -0.819310391
		balancing_only chil2sp1 utility ch1_4 -0.819310391
		balancing_only chil2sp1 utility ch2_1 -4.894437653
		balancing_only chil2sp1 utility ch2_2 -4.894437653
		balancing_only chil2sp1 utility ch2_3 -4.894437653
		balancing_only chil2sp1 utility ch2_4 -4.894437653
		balancing_only chil2sp1 utility ch3_1 -4.894437653
		balancing_only chil2sp1 utility ch3_2 -4.894437653
		balancing_only chil2sp1 utility ch3_3 -4.894437653
		balancing_only chil2sp1 utility ch3_4 -4.894437653
		balancing_only sp12cp utility sp1 1000
		balancing_only sp12gv2 utility sp1 1000
		balancing_only sp12hsb utility sp1 1000
		balancing_only sp12pfa utility sp1 1000
		balancing_only sp12ser utility sp1 1000
		balancing_only sp12fir utility sp1 1000
		balancing_only ss2sp2 utility sscp 100
		balancing_only ss2sp2 utility ssgv2 299.810165
		balancing_only ss2sp2 utility sshsb 199.873443
		balancing_only ss2sp2 utility sspfa 199.873443
		balancing_only ss2sp2 utility ssser 199.873443
		balancing_only ss2sp2 utility ssfir 0
		balancing_only ss22ch1 utility sp2 1000
		balancing_only ss22ch2 utility sp2 1000
		balancing_only ss22ch3 utility sp2 1000;

param layers_out_const :=
		balancing_only chil2sp1 utility sp1 0
		balancing_only sp12cp utility sscp 0
		balancing_only sp12gv2 utility ssgv2 0
		balancing_only sp12hsb utility sshsb 0	
		balancing_only sp12pfa utility sspfa 0
		balancing_only sp12ser utility ssser 0
		balancing_only sp12fir utility ssfir 0
		balancing_only ss2sp2 utility sp2 0
		balancing_only sp22ch1 process ch1_ret 0
		balancing_only sp22ch2 process ch2_ret 0
		balancing_only sp22ch3 process ch3_ret 0;

param layers_out_grad := 
		balancing_only chil2sp1 utility sp1 1000
		balancing_only sp12cp utility sscp 1000
		balancing_only sp12gv2 utility ssgv2 1000
		balancing_only sp12hsb utility sshsb 1000	
		balancing_only sp12pfa utility sspfa 1000
		balancing_only sp12ser utility ssser 1000
		balancing_only sp12fir utility ssfir 1000
		balancing_only ss2sp2 utility sp2 0
		balancing_only sp22ch1 process ch1_ret 0
		balancing_only sp22ch2 process ch2_ret 0
		balancing_only sp22ch3 process ch3_ret 0;


















