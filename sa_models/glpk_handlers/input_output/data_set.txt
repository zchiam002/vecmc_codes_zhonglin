set UNIT_TYPES; 
set UNITS_ALL; 
set UNIT{h in UNIT_TYPES} within UNITS_ALL; 

set LAYER_TYPES; 
set LAYERS_ALL; 
set LAYERS{h in LAYER_TYPES} within LAYERS_ALL; 
set LAYERS_DIR_IN{h in LAYERS_ALL} within UNITS_ALL; 
set LAYERS_DIR_OUT{h in LAYERS_ALL} within UNITS_ALL; 
set LAYERS_DIR; 

set ADD_CONS_TYPE; 
set ADD_CONS_SIGN; 
set ADD_CONS_ALL; 
set ADD_CONS_LESS_THAN_EQUAL_TO{h in ADD_CONS_TYPE} within ADD_CONS_ALL; 
set ADD_TERMS_PARENT{h in ADD_CONS_TYPE} within UNITS_ALL; 
set ADD_TERMS{h in ADD_CONS_ALL} within UNITS_ALL; 

set OBJ_FUNC_TYPES; 
set OBJ_FUNC{h in OBJ_FUNC_TYPES} within UNITS_ALL; 

##Parameter definition 

param fmin{h in UNITS_ALL}; 
param fmax{h in UNITS_ALL}; 
param obj1{g in OBJ_FUNC_TYPES, h in UNITS_ALL}; 
param obj2{n in OBJ_FUNC_TYPES, i in UNITS_ALL}; 

param layers_const{g in LAYER_TYPES, h in LAYERS_ALL, i in LAYERS_DIR, j in UNITS_ALL}; 
param layers_grad{g in LAYER_TYPES, h in LAYERS_ALL, i in LAYERS_DIR, j in UNITS_ALL}; 

param add_terms_streams_const{h in ADD_CONS_LESS_THAN_EQUAL_TO['stream_limit']}; 
param add_terms_streams_grad{h in ADD_CONS_LESS_THAN_EQUAL_TO['stream_limit']}; 

param less_than_equal_to_unit_binary{h in ADD_CONS_LESS_THAN_EQUAL_TO['unit_binary']}; 
param less_than_equal_to_unit_binary_terms_coeff{h in ADD_TERMS_PARENT['unit_binary']}; 
param less_than_equal_to_stream_limit{h in ADD_CONS_LESS_THAN_EQUAL_TO['stream_limit']}; 

##Variable definition 

var u_rate{h in UNITS_ALL}, >= 0, <= 1000; 
var y_onoff{i in UNITS_ALL}, integer, >= 0, <= 1; 

##Constraint definition 

s.t. y_onoff_proc{h in UNIT['process']}: y_onoff[h] = 1; 
s.t. u_lb_util{h in UNITS_ALL}: y_onoff[h]*fmin[h] - u_rate[h] <= 0; 
s.t. u_ub_util{h in UNITS_ALL}: u_rate[h] - y_onoff[h]*fmax[h] <= 0; 

s.t. layer_balance{g in LAYER_TYPES, h in LAYERS[g]}: 
(sum{i in LAYERS_DIR_IN[h]} (layers_const[g,h,'in',i]*y_onoff[i] + layers_grad[g,h,'in',i]*u_rate[i])) -  
(sum{j in LAYERS_DIR_OUT[h]} (layers_const[g,h,'out',j]*y_onoff[j] + layers_grad[g,h,'out',j]*u_rate[j])) 
= 0; 

s.t. add_cons_ltet_ub{g in ADD_CONS_LESS_THAN_EQUAL_TO['unit_binary']}: 
(sum{h in ADD_TERMS[g]} (y_onoff[h]*less_than_equal_to_unit_binary_terms_coeff[h])) -  
less_than_equal_to_unit_binary[g] <= 0; 

s.t. add_cons_ltet_sl{g in ADD_CONS_LESS_THAN_EQUAL_TO['stream_limit'], h in ADD_TERMS[g]}: 
add_terms_streams_const[g]*y_onoff[h] + add_terms_streams_grad[g]*u_rate[h] - 
less_than_equal_to_stream_limit[g] <= 0; 

##Objective function definition 

minimize power: 
sum{g in OBJ_FUNC_TYPES, h in OBJ_FUNC[g]} (y_onoff[h]*obj1[g,h] + u_rate[h]*obj2[g,h]); 

data ; 

set UNIT_TYPES := utility process ; 
set UNITS_ALL := ch1_1 ch1_2 ch1_3 ch1_4 ch2_1 ch2_2 ch2_3 ch2_4 ch3_1 ch3_2 ch3_3 ch3_4 sp1 sscp ssgv2 sshsb sspfa ssser ssfir sp2 ct1 ct2 ct3 ct4 ct5 water_supply ch1_ret ch2_ret ch3_ret sp3 ct_ret ; 

set UNIT[utility] := ch1_1 ch1_2 ch1_3 ch1_4 ch2_1 ch2_2 ch2_3 ch2_4 ch3_1 ch3_2 ch3_3 ch3_4 sp1 sscp ssgv2 sshsb sspfa ssser ssfir sp2 ct1 ct2 ct3 ct4 ct5 water_supply ; 
set UNIT[process] := ch1_ret ch2_ret ch3_ret sp3 ct_ret ; 
set LAYER_TYPES := balancing_only ; 
set LAYERS_ALL := chil2sp1 sp12cp sp12gv2 sp12hsb sp12pfa sp12ser sp12fir ss2sp2 sp22ch1 sp22ch2 sp22ch3 chilcond2sp3 ct2chilcond_ret water_exchange ; 
set LAYERS[balancing_only] := chil2sp1 sp12cp sp12gv2 sp12hsb sp12pfa sp12ser sp12fir ss2sp2 sp22ch1 sp22ch2 sp22ch3 chilcond2sp3 ct2chilcond_ret water_exchange ; 

set LAYERS_DIR_IN[chil2sp1] := ch1_1 ch1_2 ch1_3 ch1_4 ch2_1 ch2_2 ch2_3 ch2_4 ch3_1 ch3_2 ch3_3 ch3_4 ; 
set LAYERS_DIR_OUT[chil2sp1] := sp1 ; 
set LAYERS_DIR_IN[sp12cp] := sp1 ; 
set LAYERS_DIR_OUT[sp12cp] := sscp ; 
set LAYERS_DIR_IN[sp12gv2] := sp1 ; 
set LAYERS_DIR_OUT[sp12gv2] := ssgv2 ; 
set LAYERS_DIR_IN[sp12hsb] := sp1 ; 
set LAYERS_DIR_OUT[sp12hsb] := sshsb ; 
set LAYERS_DIR_IN[sp12pfa] := sp1 ; 
set LAYERS_DIR_OUT[sp12pfa] := sspfa ; 
set LAYERS_DIR_IN[sp12ser] := sp1 ; 
set LAYERS_DIR_OUT[sp12ser] := ssser ; 
set LAYERS_DIR_IN[sp12fir] := sp1 ; 
set LAYERS_DIR_OUT[sp12fir] := ssfir ; 
set LAYERS_DIR_IN[ss2sp2] := sscp ssgv2 sshsb sspfa ssser ssfir ; 
set LAYERS_DIR_OUT[ss2sp2] := sp2 ; 
set LAYERS_DIR_IN[sp22ch1] := sp2 ; 
set LAYERS_DIR_OUT[sp22ch1] := ch1_ret ; 
set LAYERS_DIR_IN[sp22ch2] := sp2 ; 
set LAYERS_DIR_OUT[sp22ch2] := ch2_ret ; 
set LAYERS_DIR_IN[sp22ch3] := sp2 ; 
set LAYERS_DIR_OUT[sp22ch3] := ch3_ret ; 
set LAYERS_DIR_IN[chilcond2sp3] := ch1_1 ch1_2 ch1_3 ch1_4 ch2_1 ch2_2 ch2_3 ch2_4 ch3_1 ch3_2 ch3_3 ch3_4 ; 
set LAYERS_DIR_OUT[chilcond2sp3] := sp3 ; 
set LAYERS_DIR_IN[ct2chilcond_ret] := ct1 ct2 ct3 ct4 ct5 ; 
set LAYERS_DIR_OUT[ct2chilcond_ret] := ct_ret ; 
set LAYERS_DIR_IN[water_exchange] := water_supply ; 
set LAYERS_DIR_OUT[water_exchange] := ct1 ct2 ct3 ct4 ct5 ; 

set LAYERS_DIR := in out; 

set ADD_CONS_TYPE := stream_limit unit_binary ; 
set ADD_CONS_SIGN := less_than_equal_to ; 
set ADD_CONS_ALL := totaluse_ch1 totaluse_ch2 totaluse_ch3 ssgv2_in ssgv2_out sshsb_in sshsb_out sspfa_in sspfa_out ssser_in ssser_out ssfir_in ssfir_out ; 

set ADD_CONS_LESS_THAN_EQUAL_TO[stream_limit] := ssgv2_in ssgv2_out sshsb_in sshsb_out sspfa_in sspfa_out ssser_in ssser_out ssfir_in ssfir_out ; 
set ADD_CONS_LESS_THAN_EQUAL_TO[unit_binary] := totaluse_ch1 totaluse_ch2 totaluse_ch3 ; 

set ADD_TERMS_PARENT[stream_limit] := sspfa ssser ssgv2 ssfir sshsb ; 
set ADD_TERMS_PARENT[unit_binary] := ch2_3 ch2_1 ch2_4 ch3_3 ch2_2 ch3_2 ch3_4 ch1_3 ch1_1 ch1_4 ch3_1 ch1_2 ; 
set ADD_TERMS[totaluse_ch1] := ch1_1 ch1_2 ch1_3 ch1_4 ; 
set ADD_TERMS[totaluse_ch2] := ch2_1 ch2_2 ch2_3 ch2_4 ; 
set ADD_TERMS[totaluse_ch3] := ch3_1 ch3_2 ch3_3 ch3_4 ; 
set ADD_TERMS[ssgv2_in] := ssgv2 ; 
set ADD_TERMS[ssgv2_out] := ssgv2 ; 
set ADD_TERMS[sshsb_in] := sshsb ; 
set ADD_TERMS[sshsb_out] := sshsb ; 
set ADD_TERMS[sspfa_in] := sspfa ; 
set ADD_TERMS[sspfa_out] := sspfa ; 
set ADD_TERMS[ssser_in] := ssser ; 
set ADD_TERMS[ssser_out] := ssser ; 
set ADD_TERMS[ssfir_in] := ssfir ; 
set ADD_TERMS[ssfir_out] := ssfir ; 

set OBJ_FUNC_TYPES := power ; 
set OBJ_FUNC[power] := ch1_1 ch1_2 ch1_3 ch1_4 ch2_1 ch2_2 ch2_3 ch2_4 ch3_1 ch3_2 ch3_3 ch3_4 sp1 sscp ssgv2 sshsb sspfa ssser ssfir sp2 ct1 ct2 ct3 ct4 ct5 water_supply ch1_ret ch2_ret ch3_ret sp3 ct_ret ; 

param fmin := 
ch1_1 0.0
ch1_2 0.0
ch1_3 0.0
ch1_4 0.0
ch2_1 0.0
ch2_2 0.0
ch2_3 0.0
ch2_4 0.0
ch3_1 0.0
ch3_2 0.0
ch3_3 0.0
ch3_4 0.0
sp1 0.0
sscp 0.0
ssgv2 0.0
sshsb 0.0
sspfa 0.0
ssser 0.0
ssfir 0.0
sp2 0.0
ct1 0.0
ct2 0.0
ct3 0.0
ct4 0.0
ct5 0.0
water_supply 0.0
ch1_ret 1.0
ch2_ret 1.0
ch3_ret 1.0
sp3 1.0
ct_ret 1.0
; 

param fmax := 
ch1_1 0.0
ch1_2 0.0
ch1_3 0.0
ch1_4 0.0
ch2_1 0.0
ch2_2 0.0
ch2_3 0.0
ch2_4 0.0
ch3_1 0.0
ch3_2 0.0
ch3_3 0.0
ch3_4 0.0
sp1 1.0
sscp 1.0
ssgv2 1.0
sshsb 1.0
sspfa 1.0
ssser 1.0
ssfir 1.0
sp2 1.0
ct1 1.0
ct2 1.0
ct3 1.0
ct4 1.0
ct5 1.0
water_supply 1.0
ch1_ret 1.0
ch2_ret 1.0
ch3_ret 1.0
sp3 1.0
ct_ret 1.0
; 

param obj1 := 
power ch1_1 0.0 
power ch1_2 0.0 
power ch1_3 0.0 
power ch1_4 0.0 
power ch2_1 0.0 
power ch2_2 0.0 
power ch2_3 0.0 
power ch2_4 0.0 
power ch3_1 0.0 
power ch3_2 0.0 
power ch3_3 0.0 
power ch3_4 0.0 
power sp1 0.0 
power sscp 0.0 
power ssgv2 0.0 
power sshsb 0.0 
power sspfa 0.0 
power ssser 0.0 
power ssfir 0.0 
power sp2 0.0 
power ct1 0.0 
power ct2 0.0 
power ct3 0.0 
power ct4 0.0 
power ct5 0.0 
power water_supply 0.0 
power ch1_ret 0.0 
power ch2_ret 0.0 
power ch3_ret 0.0 
power sp3 0.0 
power ct_ret 0.0 
; 

param obj2 := 
power ch1_1 0.0 
power ch1_2 0.0 
power ch1_3 0.0 
power ch1_4 0.0 
power ch2_1 0.0 
power ch2_2 0.0 
power ch2_3 0.0 
power ch2_4 0.0 
power ch3_1 0.0 
power ch3_2 0.0 
power ch3_3 0.0 
power ch3_4 0.0 
power sp1 0.0 
power sscp 0.0 
power ssgv2 0.0 
power sshsb 0.0 
power sspfa 0.0 
power ssser 0.0 
power ssfir 0.0 
power sp2 0.0 
power ct1 22.0 
power ct2 22.0 
power ct3 22.0 
power ct4 22.0 
power ct5 22.0 
power water_supply 0.0 
power ch1_ret 0.0 
power ch2_ret 0.0 
power ch3_ret 0.0 
power sp3 0.0 
power ct_ret 0.0 
; 

param layers_const := 
balancing_only chil2sp1 in ch1_1 0.0
balancing_only chilcond2sp3 in ch1_1 0.0
balancing_only chil2sp1 in ch1_2 0.0
balancing_only chilcond2sp3 in ch1_2 0.0
balancing_only chil2sp1 in ch1_3 0.0
balancing_only chilcond2sp3 in ch1_3 0.0
balancing_only chil2sp1 in ch1_4 0.0
balancing_only chilcond2sp3 in ch1_4 0.0
balancing_only chil2sp1 in ch2_1 0.0
balancing_only chilcond2sp3 in ch2_1 0.0
balancing_only chil2sp1 in ch2_2 0.0
balancing_only chilcond2sp3 in ch2_2 0.0
balancing_only chil2sp1 in ch2_3 0.0
balancing_only chilcond2sp3 in ch2_3 0.0
balancing_only chil2sp1 in ch2_4 0.0
balancing_only chilcond2sp3 in ch2_4 0.0
balancing_only chil2sp1 in ch3_1 0.0
balancing_only chilcond2sp3 in ch3_1 0.0
balancing_only chil2sp1 in ch3_2 0.0
balancing_only chilcond2sp3 in ch3_2 0.0
balancing_only chil2sp1 in ch3_3 0.0
balancing_only chilcond2sp3 in ch3_3 0.0
balancing_only chil2sp1 in ch3_4 0.0
balancing_only chilcond2sp3 in ch3_4 0.0
balancing_only sp12cp in sp1 0.0
balancing_only sp12gv2 in sp1 0.0
balancing_only sp12hsb in sp1 0.0
balancing_only sp12pfa in sp1 0.0
balancing_only sp12ser in sp1 0.0
balancing_only sp12fir in sp1 0.0
balancing_only ss2sp2 in sscp 0.0
balancing_only ss2sp2 in ssgv2 0.0
balancing_only ss2sp2 in sshsb 0.0
balancing_only ss2sp2 in sspfa 0.0
balancing_only ss2sp2 in ssser 0.0
balancing_only ss2sp2 in ssfir 0.0
balancing_only sp22ch1 in sp2 0.0
balancing_only sp22ch2 in sp2 0.0
balancing_only sp22ch3 in sp2 0.0
balancing_only ct2chilcond_ret in ct1 59.221306
balancing_only ct2chilcond_ret in ct2 59.221306
balancing_only ct2chilcond_ret in ct3 59.221306
balancing_only ct2chilcond_ret in ct4 59.221306
balancing_only ct2chilcond_ret in ct5 59.221306
balancing_only water_exchange in water_supply 0.0
balancing_only chil2sp1 out sp1 0.0
balancing_only sp12cp out sscp 0.0
balancing_only sp12gv2 out ssgv2 0.0
balancing_only sp12hsb out sshsb 0.0
balancing_only sp12pfa out sspfa 0.0
balancing_only sp12ser out ssser 0.0
balancing_only sp12fir out ssfir 0.0
balancing_only ss2sp2 out sp2 0.0
balancing_only sp22ch1 out ch1_ret 0.0
balancing_only sp22ch2 out ch2_ret 0.0
balancing_only sp22ch3 out ch3_ret 0.0
balancing_only chilcond2sp3 out sp3 0.0
balancing_only water_exchange out ct1 5.110357554e-12
balancing_only water_exchange out ct2 5.110357554e-12
balancing_only water_exchange out ct3 5.110357554e-12
balancing_only water_exchange out ct4 5.110357554e-12
balancing_only water_exchange out ct5 5.110357554e-12
balancing_only ct2chilcond_ret out ct_ret 0.0
; 

param layers_grad := 
balancing_only chil2sp1 in ch1_1 -0.0
balancing_only chilcond2sp3 in ch1_1 0.0
balancing_only chil2sp1 in ch1_2 -0.0
balancing_only chilcond2sp3 in ch1_2 0.0
balancing_only chil2sp1 in ch1_3 -0.0
balancing_only chilcond2sp3 in ch1_3 0.0
balancing_only chil2sp1 in ch1_4 -0.0
balancing_only chilcond2sp3 in ch1_4 0.0
balancing_only chil2sp1 in ch2_1 -0.0
balancing_only chilcond2sp3 in ch2_1 0.0
balancing_only chil2sp1 in ch2_2 -0.0
balancing_only chilcond2sp3 in ch2_2 0.0
balancing_only chil2sp1 in ch2_3 -0.0
balancing_only chilcond2sp3 in ch2_3 0.0
balancing_only chil2sp1 in ch2_4 -0.0
balancing_only chilcond2sp3 in ch2_4 0.0
balancing_only chil2sp1 in ch3_1 -0.0
balancing_only chilcond2sp3 in ch3_1 0.0
balancing_only chil2sp1 in ch3_2 -0.0
balancing_only chilcond2sp3 in ch3_2 0.0
balancing_only chil2sp1 in ch3_3 -0.0
balancing_only chilcond2sp3 in ch3_3 0.0
balancing_only chil2sp1 in ch3_4 -0.0
balancing_only chilcond2sp3 in ch3_4 0.0
balancing_only sp12cp in sp1 1000.0
balancing_only sp12gv2 in sp1 1000.0
balancing_only sp12hsb in sp1 1000.0
balancing_only sp12pfa in sp1 1000.0
balancing_only sp12ser in sp1 1000.0
balancing_only sp12fir in sp1 1000.0
balancing_only ss2sp2 in sscp 336.89755669
balancing_only ss2sp2 in ssgv2 0.0
balancing_only ss2sp2 in sshsb 0.0
balancing_only ss2sp2 in sspfa 0.0
balancing_only ss2sp2 in ssser 391.667091602
balancing_only ss2sp2 in ssfir 271.435351709
balancing_only sp22ch1 in sp2 1000.0
balancing_only sp22ch2 in sp2 1000.0
balancing_only sp22ch3 in sp2 1000.0
balancing_only ct2chilcond_ret in ct1 -0.09643618
balancing_only ct2chilcond_ret in ct2 -0.09643618
balancing_only ct2chilcond_ret in ct3 -0.09643618
balancing_only ct2chilcond_ret in ct4 -0.09643618
balancing_only ct2chilcond_ret in ct5 -0.09643618
balancing_only water_exchange in water_supply 100000.0
balancing_only chil2sp1 out sp1 1000.0
balancing_only sp12cp out sscp 1000.0
balancing_only sp12gv2 out ssgv2 1000.0
balancing_only sp12hsb out sshsb 1000.0
balancing_only sp12pfa out sspfa 1000.0
balancing_only sp12ser out ssser 1000.0
balancing_only sp12fir out ssfir 1000.0
balancing_only ss2sp2 out sp2 1000.0
balancing_only sp22ch1 out ch1_ret 274.15
balancing_only sp22ch2 out ch2_ret 274.15
balancing_only sp22ch3 out ch3_ret 274.15
balancing_only chilcond2sp3 out sp3 296.10653
balancing_only water_exchange out ct1 1.62970688142e-12
balancing_only water_exchange out ct2 1.62970688142e-12
balancing_only water_exchange out ct3 1.62970688142e-12
balancing_only water_exchange out ct4 1.62970688142e-12
balancing_only water_exchange out ct5 1.62970688142e-12
balancing_only ct2chilcond_ret out ct_ret 295.62
; 

param less_than_equal_to_unit_binary := 
totaluse_ch1 1.0
totaluse_ch2 1.0
totaluse_ch3 1.0
;
 
param less_than_equal_to_unit_binary_terms_coeff := 
ch1_1 1.0
ch1_2 1.0
ch1_3 1.0
ch1_4 1.0
ch2_1 1.0
ch2_2 1.0
ch2_3 1.0
ch2_4 1.0
ch3_1 1.0
ch3_2 1.0
ch3_3 1.0
ch3_4 1.0
;
 
param add_terms_streams_const := 
ssgv2_in 0.0
ssgv2_out 0.0
sshsb_in 0.0
sshsb_out 0.0
sspfa_in 0.0
sspfa_out 0.0
ssser_in 0.0
ssser_out 0.0
ssfir_in 0.0
ssfir_out 0.0
;
 
param add_terms_streams_grad := 
ssgv2_in 1000.0
ssgv2_out 0.0
sshsb_in 1000.0
sshsb_out 0.0
sspfa_in 1000.0
sspfa_out 0.0
ssser_in 1000.0
ssser_out 391.667091602
ssfir_in 1000.0
ssfir_out 271.435351709
;
 
param less_than_equal_to_stream_limit := 
ssgv2_in 278.15
ssgv2_out 287.15
sshsb_in 278.15
sshsb_out 287.15
sspfa_in 278.15
sspfa_out 287.15
ssser_in 278.15
ssser_out 287.15
ssfir_in 278.15
ssfir_out 287.15
;
 
end; 
